format binaryorg 0x7c00use16_entry_point:  xor si,si  jmp printprint:  mov al,[si + msg]  mov ah,0x0e  cmp al,0  je print_end  add si,1  int 0x10  jmp printprint_end:  xor si,si  jmp read_nameread_name:  mov ah,0x00  int 0x16  mov ah,0x0e  cmp al,13  je read_end  mov [name_buffer + si],al  cmp al,37  je read_name  cmp al,39  je read_name  int 0x10  add si,1  jmp read_nameread_end:  add si,1  mov byte[name_buffer + si],0  mov al,0xa  mov ah,0x0e  int 0x10  mov al,13  mov ah,0x0e  int 0x10  xor si,si  jmp print_welcomeprint_welcome:  mov al,[si + welc_msg]  mov ah,0x0e  cmp al,0  je before_print_name  add si,1  int 0x10  jmp print_welcomebefore_print_name:  xor si,si  jmp print_nameprint_name:  mov al,[si + name_buffer]  mov ah,0x0e  cmp al,0  je boot_end  add si,1  int 0x10  jmp print_name boot_end:  jmp $msg: db "write your name: ",00welc_msg db "hello mr ",00name_buffer: rb 10;13 back to line start;10 new linetimes 510 - ($-$$) db 0dw 0xAA55